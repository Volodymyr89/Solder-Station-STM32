<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\SOLDER_STATION_STM32_r0015_05042022.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\SOLDER_STATION_STM32_r0015_05042022.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 6140101: Last Updated: Tue Apr 18 23:02:05 2023
<BR><P>
<H3>Maximum Stack Usage =        152 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
__rt_entry_main &rArr; main &rArr; Data_Averager_For_Solder &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[42]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">NMI_Handler</a><BR>
 <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
 <LI><a href="#[3]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">MemManage_Handler</a><BR>
 <LI><a href="#[4]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">BusFault_Handler</a><BR>
 <LI><a href="#[5]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">UsageFault_Handler</a><BR>
 <LI><a href="#[6]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">SVC_Handler</a><BR>
 <LI><a href="#[7]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">DebugMon_Handler</a><BR>
 <LI><a href="#[8]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">PendSV_Handler</a><BR>
 <LI><a href="#[1c]">ADC1_2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1c]">ADC1_2_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1c]">ADC1_2_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[4]">BusFault_Handler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[1f]">CAN1_RX1_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[20]">CAN1_SCE_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[15]">DMA1_Channel1_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[16]">DMA1_Channel2_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[17]">DMA1_Channel3_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[18]">DMA1_Channel4_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[19]">DMA1_Channel5_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[1a]">DMA1_Channel6_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[1b]">DMA1_Channel7_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[7]">DebugMon_Handler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[10]">EXTI0_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[32]">EXTI15_10_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[11]">EXTI1_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[12]">EXTI2_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[13]">EXTI3_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[14]">EXTI4_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[21]">EXTI9_5_IRQHandler</a> from interrupts.o(.text.EXTI9_5_IRQHandler) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[3c]">FAN_FSM</a> from solder_station_stm32.o(.text.FAN_FSM) referenced from solder_station_stm32.o(.data.StateMachine)
 <LI><a href="#[3e]">FAN_Speed_FSM</a> from solder_station_stm32.o(.text.FAN_Speed_FSM) referenced from solder_station_stm32.o(.data.StateMachine)
 <LI><a href="#[e]">FLASH_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[2a]">I2C1_ER_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[29]">I2C1_EV_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[2c]">I2C2_ER_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[2b]">I2C2_EV_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[3]">MemManage_Handler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[41]">NO_FAN_detected_FSM</a> from solder_station_stm32.o(.text.NO_FAN_detected_FSM) referenced from solder_station_stm32.o(.data.StateMachine)
 <LI><a href="#[40]">NO_Solder_detected_FSM</a> from solder_station_stm32.o(.text.NO_Solder_detected_FSM) referenced from solder_station_stm32.o(.data.StateMachine)
 <LI><a href="#[b]">PVD_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[f]">RCC_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[33]">RTCAlarm_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[d]">RTC_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[3f]">SETTING_BARS_FAN_FSM</a> from solder_station_stm32.o(.text.SETTING_BARS_FAN_FSM) referenced from solder_station_stm32.o(.data.StateMachine)
 <LI><a href="#[3d]">SETTING_TEMPERATURE_FAN_FSM</a> from solder_station_stm32.o(.text.SETTING_TEMPERATURE_FAN_FSM) referenced from solder_station_stm32.o(.data.StateMachine)
 <LI><a href="#[3b]">SETTING_TEMPERATURE_SOLDER_FSM</a> from solder_station_stm32.o(.text.SETTING_TEMPERATURE_SOLDER_FSM) referenced from solder_station_stm32.o(.data.StateMachine)
 <LI><a href="#[3a]">SOLDER_FSM</a> from solder_station_stm32.o(.text.SOLDER_FSM) referenced from solder_station_stm32.o(.data.StateMachine)
 <LI><a href="#[2d]">SPI1_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[2e]">SPI2_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[39]">STBY_Mode_FSM</a> from solder_station_stm32.o(.text.STBY_Mode_FSM) referenced from solder_station_stm32.o(.data.StateMachine)
 <LI><a href="#[6]">SVC_Handler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[9]">SysTick_Handler</a> from short_delays_us_ms.o(.text.SysTick_Handler) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[35]">SystemInit</a> from system_stm32f10x.o(.text.SystemInit) referenced from startup_stm32f10x_md.o(.text)
 <LI><a href="#[c]">TAMPER_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[22]">TIM1_BRK_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[25]">TIM1_CC_IRQHandler</a> from interrupts.o(.text.TIM1_CC_IRQHandler) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[24]">TIM1_TRG_COM_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[23]">TIM1_UP_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[26]">TIM2_IRQHandler</a> from interrupts.o(.text.TIM2_IRQHandler) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[27]">TIM3_IRQHandler</a> from interrupts.o(.text.TIM3_IRQHandler) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[28]">TIM4_IRQHandler</a> from interrupts.o(.text.TIM4_IRQHandler) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[2f]">USART1_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[30]">USART2_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[31]">USART3_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[34]">USBWakeUp_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[1d]">USB_HP_CAN1_TX_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[1e]">USB_LP_CAN1_RX0_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[5]">UsageFault_Handler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[a]">WWDG_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[36]">__main</a> from __main.o(!!!main) referenced from startup_stm32f10x_md.o(.text)
 <LI><a href="#[38]">_printf_input_char</a> from _printf_char_common.o(.text) referenced from _printf_char_common.o(.text)
 <LI><a href="#[37]">_sputc</a> from _sputc.o(.text) referenced from noretval__2sprintf.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[36]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(.text)
</UL>
<P><STRONG><a name="[43]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[45]"></a>__scatterload_rt2</STRONG> (Thumb, 44 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[d0]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[d1]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[46]"></a>__scatterload_copy</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[d2]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[47]"></a>_printf_d</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_d.o(.ARM.Collect$$_printf_percent$$00000009))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = _printf_d &rArr; _printf_int_dec &rArr; _printf_int_common
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[58]"></a>_printf_percent</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>

<P><STRONG><a name="[49]"></a>_printf_u</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = _printf_u &rArr; _printf_int_dec &rArr; _printf_int_common
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[d3]"></a>_printf_percent_end</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_percent_end.o(.ARM.Collect$$_printf_percent$$00000017))

<P><STRONG><a name="[4d]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[d4]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[d5]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[d6]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[d7]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[d8]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[d9]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[da]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000002))

<P><STRONG><a name="[db]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[dc]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[dd]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[de]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[df]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[e0]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[e1]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[e2]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[e3]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[e4]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[e5]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[e6]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[e7]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[e8]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[52]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[e9]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))

<P><STRONG><a name="[ea]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000007))

<P><STRONG><a name="[eb]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[ec]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000010))

<P><STRONG><a name="[ed]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A))

<P><STRONG><a name="[ee]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[ef]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))

<P><STRONG><a name="[44]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[f0]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[4a]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[4c]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[f1]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[4e]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; Data_Averager_For_Solder &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[f2]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[5d]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[51]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[f3]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[53]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>ADC1_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>CAN1_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>CAN1_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>DMA1_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>DMA1_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>DMA1_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>DMA1_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>DMA1_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>DMA1_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>RTCAlarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>TAMPER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>TIM1_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>TIM1_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>TIM1_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>USART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>USBWakeUp_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>USB_HP_CAN1_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>USB_LP_CAN1_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_stm32f10x_md.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[55]"></a>__2sprintf</STRONG> (Thumb, 34 bytes, Stack size 32 bytes, noretval__2sprintf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_SET_Solder_Data_to_Display
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_SET_FAN_Data_to_Display
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Data_Averager_From_FAN
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Data_Averager_For_Solder
</UL>

<P><STRONG><a name="[57]"></a>__printf</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, __printf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_percent
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>

<P><STRONG><a name="[48]"></a>_printf_int_dec</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, _printf_dec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _printf_int_dec &rArr; _printf_int_common
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_u
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_d
</UL>

<P><STRONG><a name="[9d]"></a>__aeabi_memclr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memclr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSD1306_Clear_Display
</UL>

<P><STRONG><a name="[5a]"></a>__rt_memclr</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset_w
</UL>

<P><STRONG><a name="[f4]"></a>_memset</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr.o(.text), UNUSED)

<P><STRONG><a name="[f5]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[f6]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[f7]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[59]"></a>_printf_int_common</STRONG> (Thumb, 178 bytes, Stack size 32 bytes, _printf_intcommon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _printf_int_common
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[56]"></a>_printf_char_common</STRONG> (Thumb, 32 bytes, Stack size 64 bytes, _printf_char_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>

<P><STRONG><a name="[37]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _sputc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> noretval__2sprintf.o(.text)
</UL>
<P><STRONG><a name="[f8]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[f9]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[fa]"></a>__rt_memclr_w</STRONG> (Thumb, 78 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[5b]"></a>_memset_w</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr_w.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memclr
</UL>

<P><STRONG><a name="[4b]"></a>__user_setup_stackheap</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[50]"></a>exit</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = exit
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[fb]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[5c]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[fc]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[54]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[fd]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[fe]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[ff]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[5e]"></a>Adafruit_GFX_drawBitmap</STRONG> (Thumb, 92 bytes, Stack size 40 bytes, sdd1306.o(.text.Adafruit_GFX_drawBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Adafruit_GFX_drawBitmap
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawPixel
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_STBY_Symbol
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_SOLDER_Symbol
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_FAN_is_Cooling_map
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_FAN_Symbol
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_FAN_Speed_Symbol
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_FAN_Motor_Status_Bars
</UL>

<P><STRONG><a name="[60]"></a>Adafruit_GFX_drawChar</STRONG> (Thumb, 202 bytes, Stack size 48 bytes, sdd1306.o(.text.Adafruit_GFX_drawChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Adafruit_GFX_drawChar
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pgm_read_glyph_ptr
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pgm_read_bitmap_ptr
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawPixel
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_SET_Solder_Data_to_Display
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_SET_FAN_Data_to_Display
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Data_Averager_From_FAN
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Data_Averager_For_Solder
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssd1306_WriteString
</UL>

<P><STRONG><a name="[63]"></a>Adafruit_GFX_drawCircle</STRONG> (Thumb, 374 bytes, Stack size 48 bytes, sdd1306.o(.text.Adafruit_GFX_drawCircle))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Adafruit_GFX_drawCircle
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawPixel
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_SET_Solder_Data_to_Display
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_SET_FAN_Data_to_Display
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Data_Averager_From_FAN
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Data_Averager_For_Solder
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_STBY_Symbol
</UL>

<P><STRONG><a name="[6f]"></a>Adafruit_GFX_setFont</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, sdd1306.o(.text.Adafruit_GFX_setFont))
<BR><BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_SET_Solder_Data_to_Display
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_SET_FAN_Data_to_Display
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Data_Averager_From_FAN
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Data_Averager_For_Solder
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_STBY_Symbol
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_SOLDER_Symbol
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_NO_Solder_detected
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_FAN_Symbol
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_FAN_Speed_Symbol
</UL>

<P><STRONG><a name="[64]"></a>DLY4_Delay_ms_INTERRUPT</STRONG> (Thumb, 144 bytes, Stack size 8 bytes, solder_station_stm32.o(.text.DLY4_Delay_ms_INTERRUPT))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DLY4_Delay_ms_INTERRUPT
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SETTING_TEMPERATURE_SOLDER_FSM
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SETTING_TEMPERATURE_FAN_FSM
</UL>

<P><STRONG><a name="[66]"></a>Data_Averager_For_Solder</STRONG> (Thumb, 236 bytes, Stack size 32 bytes, solder_station_stm32.o(.text.Data_Averager_For_Solder))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = Data_Averager_For_Solder &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssd1306_WriteString
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowFanisCooling
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Cursor
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSD1306_Draw_Display
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_SOLDER_Symbol
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_Buffer
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Adafruit_GFX_setFont
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Adafruit_GFX_drawCircle
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Adafruit_GFX_drawChar
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;roundf
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[74]"></a>Data_Averager_From_FAN</STRONG> (Thumb, 212 bytes, Stack size 24 bytes, solder_station_stm32.o(.text.Data_Averager_From_FAN))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = Data_Averager_From_FAN &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssd1306_WriteString
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Cursor
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSD1306_Draw_Display
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_FAN_Symbol
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_Buffer
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Adafruit_GFX_setFont
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Adafruit_GFX_drawCircle
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Adafruit_GFX_drawChar
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;roundf
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[76]"></a>Debug_UART_init</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, solder_station_stm32.o(.text.Debug_UART_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Debug_UART_init &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_EN
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[72]"></a>Display_Buffer</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, sdd1306.o(.text.Display_Buffer))
<BR><BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_SET_Solder_Data_to_Display
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_SET_FAN_Data_to_Display
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_SET_FAN_Bars_Data_to_Display
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Data_Averager_From_FAN
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Data_Averager_For_Solder
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STBY_Mode_FSM
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SOLDER_FSM
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FAN_Speed_FSM
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FAN_FSM
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_STBY_Symbol
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_SOLDER_Symbol
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_NO_Solder_detected
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_FAN_Symbol
</UL>

<P><STRONG><a name="[5f]"></a>DrawPixel</STRONG> (Thumb, 84 bytes, Stack size 0 bytes, sdd1306.o(.text.DrawPixel))
<BR><BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Adafruit_GFX_drawCircle
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Adafruit_GFX_drawChar
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Adafruit_GFX_drawBitmap
</UL>

<P><STRONG><a name="[7b]"></a>Draw_Bars</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, solder_station_stm32.o(.text.Draw_Bars))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = Draw_Bars &rArr; Draw_FAN_Motor_Status_Bars &rArr; Adafruit_GFX_drawBitmap
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_FAN_Motor_Status_Bars
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_SET_FAN_Bars_Data_to_Display
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FAN_Speed_FSM
</UL>

<P><STRONG><a name="[7c]"></a>Draw_FAN_Motor_Status_Bars</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, solder_station_stm32.o(.text.Draw_FAN_Motor_Status_Bars))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Draw_FAN_Motor_Status_Bars &rArr; Adafruit_GFX_drawBitmap
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Adafruit_GFX_drawBitmap
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_Bars
</UL>

<P><STRONG><a name="[7d]"></a>Draw_FAN_Speed_Symbol</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, solder_station_stm32.o(.text.Draw_FAN_Speed_Symbol))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Draw_FAN_Speed_Symbol &rArr; ssd1306_WriteString &rArr; Adafruit_GFX_drawChar
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssd1306_WriteString
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Cursor
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Adafruit_GFX_setFont
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Adafruit_GFX_drawBitmap
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_SET_FAN_Bars_Data_to_Display
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FAN_Speed_FSM
</UL>

<P><STRONG><a name="[75]"></a>Draw_FAN_Symbol</STRONG> (Thumb, 104 bytes, Stack size 8 bytes, solder_station_stm32.o(.text.Draw_FAN_Symbol))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Draw_FAN_Symbol &rArr; ssd1306_WriteString &rArr; Adafruit_GFX_drawChar
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssd1306_WriteString
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Cursor
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSD1306_Clear_Display
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_Buffer
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Adafruit_GFX_setFont
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Adafruit_GFX_drawBitmap
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_SET_FAN_Data_to_Display
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Data_Averager_From_FAN
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FAN_FSM
</UL>

<P><STRONG><a name="[7f]"></a>Draw_FAN_is_Cooling_map</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, solder_station_stm32.o(.text.Draw_FAN_is_Cooling_map))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Draw_FAN_is_Cooling_map &rArr; Adafruit_GFX_drawBitmap
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Adafruit_GFX_drawBitmap
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_Fan_is_Cooling
</UL>

<P><STRONG><a name="[80]"></a>Draw_Fan_is_Cooling</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, solder_station_stm32.o(.text.Draw_Fan_is_Cooling))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Draw_Fan_is_Cooling &rArr; Draw_FAN_is_Cooling_map &rArr; Adafruit_GFX_drawBitmap
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_FAN_is_Cooling_map
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowFanisCooling
</UL>

<P><STRONG><a name="[81]"></a>Draw_NO_Solder_detected</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, solder_station_stm32.o(.text.Draw_NO_Solder_detected))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Draw_NO_Solder_detected &rArr; ssd1306_WriteString &rArr; Adafruit_GFX_drawChar
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssd1306_WriteString
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Cursor
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSD1306_Draw_Display
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSD1306_Clear_Display
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_Buffer
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Adafruit_GFX_setFont
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NO_Solder_detected_FSM
</UL>

<P><STRONG><a name="[6d]"></a>Draw_SOLDER_Symbol</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, solder_station_stm32.o(.text.Draw_SOLDER_Symbol))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Draw_SOLDER_Symbol &rArr; ssd1306_WriteString &rArr; Adafruit_GFX_drawChar
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssd1306_WriteString
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Cursor
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSD1306_Clear_Display
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_Buffer
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Adafruit_GFX_setFont
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Adafruit_GFX_drawBitmap
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_SET_Solder_Data_to_Display
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Data_Averager_For_Solder
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SOLDER_FSM
</UL>

<P><STRONG><a name="[82]"></a>Draw_STBY_Symbol</STRONG> (Thumb, 160 bytes, Stack size 8 bytes, solder_station_stm32.o(.text.Draw_STBY_Symbol))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Draw_STBY_Symbol &rArr; ssd1306_WriteString &rArr; Adafruit_GFX_drawChar
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssd1306_WriteString
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Cursor
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSD1306_Draw_Display
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSD1306_Clear_Display
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_Buffer
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Adafruit_GFX_setFont
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Adafruit_GFX_drawCircle
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Adafruit_GFX_drawBitmap
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STBY_Mode_FSM
</UL>

<P><STRONG><a name="[83]"></a>ENCODER_init</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, solder_station_stm32.o(.text.ENCODER_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ENCODER_init &rArr; GPIO_EN
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_EN
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ext_interrupt_to_PINB6_PINB7_init
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[21]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, interrupts.o(.text.EXTI9_5_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = EXTI9_5_IRQHandler &rArr; FSM
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSM
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[84]"></a>Ext_interrupt_to_PINB6_PINB7_init</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, solder_station_stm32.o(.text.Ext_interrupt_to_PINB6_PINB7_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Ext_interrupt_to_PINB6_PINB7_init
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENCODER_init
</UL>

<P><STRONG><a name="[3c]"></a>FAN_FSM</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, solder_station_stm32.o(.text.FAN_FSM))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = FAN_FSM &rArr; Draw_FAN_Symbol &rArr; ssd1306_WriteString &rArr; Adafruit_GFX_drawChar
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM1_init_Capture_Compare
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSD1306_Clear_Display
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_EN_OFF_Motor_FAN
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_EN_FAN_HEATER
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_FAN_Symbol
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_Buffer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> solder_station_stm32.o(.data.StateMachine)
</UL>
<P><STRONG><a name="[3e]"></a>FAN_Speed_FSM</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, solder_station_stm32.o(.text.FAN_Speed_FSM))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = FAN_Speed_FSM &rArr; Draw_Bars &rArr; Draw_FAN_Motor_Status_Bars &rArr; Adafruit_GFX_drawBitmap
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSD1306_Draw_Display
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSD1306_Clear_Display
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_FAN_Speed_Symbol
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_Bars
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_Buffer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> solder_station_stm32.o(.data.StateMachine)
</UL>
<P><STRONG><a name="[85]"></a>FSM</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, solder_station_stm32.o(.text.FSM))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = FSM
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_IRQHandler
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_IRQHandler
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI9_5_IRQHandler
</UL>

<P><STRONG><a name="[78]"></a>GPIO_EN</STRONG> (Thumb, 912 bytes, Stack size 8 bytes, stm32_gpio_lib.o(.text.GPIO_EN))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO_EN
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_Receive_Temperature
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Status_LED_init
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Skip_Button_init
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2_init
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Make_Click_init
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENCODER_init
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Debug_UART_init
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_init_Capture_Compare
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM1_init_Capture_Compare
</UL>

<P><STRONG><a name="[8b]"></a>Make_Click</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, solder_station_stm32.o(.text.Make_Click))
<BR><BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Monitor_Skip_Button
</UL>

<P><STRONG><a name="[89]"></a>Make_Click_init</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, solder_station_stm32.o(.text.Make_Click_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Make_Click_init &rArr; GPIO_EN
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_EN
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8a]"></a>Monitor_Skip_Button</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, solder_station_stm32.o(.text.Monitor_Skip_Button))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Monitor_Skip_Button &rArr; SKIP_Button_Timer
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Make_Click
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SKIP_Button_Timer
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_IRQHandler
</UL>

<P><STRONG><a name="[41]"></a>NO_FAN_detected_FSM</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, solder_station_stm32.o(.text.NO_FAN_detected_FSM))
<BR>[Address Reference Count : 1]<UL><LI> solder_station_stm32.o(.data.StateMachine)
</UL>
<P><STRONG><a name="[40]"></a>NO_Solder_detected_FSM</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, solder_station_stm32.o(.text.NO_Solder_detected_FSM))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = NO_Solder_detected_FSM &rArr; Draw_NO_Solder_detected &rArr; ssd1306_WriteString &rArr; Adafruit_GFX_drawChar
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_Disable_SOLDER
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_NO_Solder_detected
</UL>
<BR>[Address Reference Count : 1]<UL><LI> solder_station_stm32.o(.data.StateMachine)
</UL>
<P><STRONG><a name="[b2]"></a>PB0_LED_main_STATUS</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, main_solder_station_stm32.o(.text.PB0_LED_main_STATUS))
<BR><BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8e]"></a>PID_FAN</STRONG> (Thumb, 252 bytes, Stack size 40 bytes, solder_station_stm32.o(.text.PID_FAN))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = PID_FAN &rArr; SPI1_Receive_Temperature &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_Receive_Temperature
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;roundf
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fcmpge
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Update_PID_FAN
</UL>

<P><STRONG><a name="[96]"></a>PID_Solder</STRONG> (Thumb, 252 bytes, Stack size 40 bytes, solder_station_stm32.o(.text.PID_Solder))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = PID_Solder &rArr; SPI1_Receive_Temperature &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_Receive_Temperature
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;roundf
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fcmpge
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Update_PID_Solder
</UL>

<P><STRONG><a name="[ad]"></a>PWM_Disable_FAN_HEATER</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, solder_station_stm32.o(.text.PWM_Disable_FAN_HEATER))
<BR><BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Turn_OFF_FAN
</UL>

<P><STRONG><a name="[8d]"></a>PWM_Disable_SOLDER</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, solder_station_stm32.o(.text.PWM_Disable_SOLDER))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PWM_Disable_SOLDER
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_DisableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NO_Solder_detected_FSM
</UL>

<P><STRONG><a name="[88]"></a>PWM_EN_FAN_HEATER</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, solder_station_stm32.o(.text.PWM_EN_FAN_HEATER))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PWM_EN_FAN_HEATER
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FAN_FSM
</UL>

<P><STRONG><a name="[87]"></a>PWM_EN_OFF_Motor_FAN</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, solder_station_stm32.o(.text.PWM_EN_OFF_Motor_FAN))
<BR><BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Turn_OFF_FAN
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FAN_FSM
</UL>

<P><STRONG><a name="[98]"></a>PWM_EN_SOLDER</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, solder_station_stm32.o(.text.PWM_EN_SOLDER))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PWM_EN_SOLDER
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STBY_Mode_FSM
</UL>

<P><STRONG><a name="[77]"></a>RCC_APB1PeriphClockCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_rcc.o(.text.RCC_APB1PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Debug_UART_init
</UL>

<P><STRONG><a name="[ae]"></a>RCC_GetClocksFreq</STRONG> (Thumb, 160 bytes, Stack size 8 bytes, stm32f10x_rcc.o(.text.RCC_GetClocksFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
</UL>

<P><STRONG><a name="[3f]"></a>SETTING_BARS_FAN_FSM</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, solder_station_stm32.o(.text.SETTING_BARS_FAN_FSM))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SETTING_BARS_FAN_FSM
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SET_FAN_Motor_PWM_DutyCycle_and_BARs
</UL>
<BR>[Address Reference Count : 1]<UL><LI> solder_station_stm32.o(.data.StateMachine)
</UL>
<P><STRONG><a name="[3d]"></a>SETTING_TEMPERATURE_FAN_FSM</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, solder_station_stm32.o(.text.SETTING_TEMPERATURE_FAN_FSM))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SETTING_TEMPERATURE_FAN_FSM &rArr; DLY4_Delay_ms_INTERRUPT
</UL>
<BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SET_FAN_Data
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DLY4_Delay_ms_INTERRUPT
</UL>
<BR>[Address Reference Count : 1]<UL><LI> solder_station_stm32.o(.data.StateMachine)
</UL>
<P><STRONG><a name="[3b]"></a>SETTING_TEMPERATURE_SOLDER_FSM</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, solder_station_stm32.o(.text.SETTING_TEMPERATURE_SOLDER_FSM))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SETTING_TEMPERATURE_SOLDER_FSM &rArr; DLY4_Delay_ms_INTERRUPT
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SET_Solder_Data
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DLY4_Delay_ms_INTERRUPT
</UL>
<BR>[Address Reference Count : 1]<UL><LI> solder_station_stm32.o(.data.StateMachine)
</UL>
<P><STRONG><a name="[9a]"></a>SET_FAN_Data</STRONG> (Thumb, 146 bytes, Stack size 0 bytes, solder_station_stm32.o(.text.SET_FAN_Data))
<BR><BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SETTING_TEMPERATURE_FAN_FSM
</UL>

<P><STRONG><a name="[99]"></a>SET_FAN_Motor_PWM_DutyCycle_and_BARs</STRONG> (Thumb, 176 bytes, Stack size 0 bytes, solder_station_stm32.o(.text.SET_FAN_Motor_PWM_DutyCycle_and_BARs))
<BR><BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SETTING_BARS_FAN_FSM
</UL>

<P><STRONG><a name="[9b]"></a>SET_Solder_Data</STRONG> (Thumb, 144 bytes, Stack size 0 bytes, solder_station_stm32.o(.text.SET_Solder_Data))
<BR><BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SETTING_TEMPERATURE_SOLDER_FSM
</UL>

<P><STRONG><a name="[8c]"></a>SKIP_Button_Timer</STRONG> (Thumb, 124 bytes, Stack size 8 bytes, solder_station_stm32.o(.text.SKIP_Button_Timer))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SKIP_Button_Timer
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Monitor_Skip_Button
</UL>

<P><STRONG><a name="[3a]"></a>SOLDER_FSM</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, solder_station_stm32.o(.text.SOLDER_FSM))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = SOLDER_FSM &rArr; Draw_SOLDER_Symbol &rArr; ssd1306_WriteString &rArr; Adafruit_GFX_drawChar
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSD1306_Clear_Display
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_SOLDER_Symbol
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_Buffer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> solder_station_stm32.o(.data.StateMachine)
</UL>
<P><STRONG><a name="[90]"></a>SPI1_Receive_Temperature</STRONG> (Thumb, 312 bytes, Stack size 24 bytes, spi_transmitt.o(.text.SPI1_Receive_Temperature))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SPI1_Receive_Temperature &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_EN
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Turn_OFF_FAN
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_Solder
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_FAN
</UL>

<P><STRONG><a name="[9f]"></a>SPI2_SEND_Command</STRONG> (Thumb, 64 bytes, Stack size 4 bytes, spi_transmitt.o(.text.SPI2_SEND_Command))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = SPI2_SEND_Command
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSD1306_Init
</UL>

<P><STRONG><a name="[9c]"></a>SPI2_init</STRONG> (Thumb, 224 bytes, Stack size 16 bytes, spi_transmitt.o(.text.SPI2_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SPI2_init &rArr; GPIO_EN
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_EN
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7e]"></a>SSD1306_Clear_Display</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, sdd1306.o(.text.SSD1306_Clear_Display))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SSD1306_Clear_Display
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Cursor
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_SET_Solder_Data_to_Display
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_SET_FAN_Data_to_Display
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_SET_FAN_Bars_Data_to_Display
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STBY_Mode_FSM
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SOLDER_FSM
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FAN_Speed_FSM
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FAN_FSM
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_STBY_Symbol
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_SOLDER_Symbol
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_NO_Solder_detected
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_FAN_Symbol
</UL>

<P><STRONG><a name="[73]"></a>SSD1306_Draw_Display</STRONG> (Thumb, 90 bytes, Stack size 4 bytes, sdd1306.o(.text.SSD1306_Draw_Display))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = SSD1306_Draw_Display
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_SET_Solder_Data_to_Display
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_SET_FAN_Data_to_Display
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_SET_FAN_Bars_Data_to_Display
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Data_Averager_From_FAN
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Data_Averager_For_Solder
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FAN_Speed_FSM
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_STBY_Symbol
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_NO_Solder_detected
</UL>

<P><STRONG><a name="[9e]"></a>SSD1306_Init</STRONG> (Thumb, 214 bytes, Stack size 8 bytes, sdd1306.o(.text.SSD1306_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SSD1306_Init &rArr; SPI2_SEND_Command
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2_SEND_Command
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[39]"></a>STBY_Mode_FSM</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, solder_station_stm32.o(.text.STBY_Mode_FSM))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = STBY_Mode_FSM &rArr; Draw_STBY_Symbol &rArr; ssd1306_WriteString &rArr; Adafruit_GFX_drawChar
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_init_Capture_Compare
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSD1306_Clear_Display
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_EN_SOLDER
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_STBY_Symbol
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_Buffer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> solder_station_stm32.o(.data.StateMachine)
</UL>
<P><STRONG><a name="[70]"></a>Set_Cursor</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, sdd1306.o(.text.Set_Cursor))
<BR><BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_SET_Solder_Data_to_Display
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_SET_FAN_Data_to_Display
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Data_Averager_From_FAN
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Data_Averager_For_Solder
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSD1306_Clear_Display
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_STBY_Symbol
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_SOLDER_Symbol
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_NO_Solder_detected
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_FAN_Symbol
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_FAN_Speed_Symbol
</UL>

<P><STRONG><a name="[a3]"></a>Short_Delays_Systik_us_ms</STRONG> (Thumb, 150 bytes, Stack size 16 bytes, short_delays_us_ms.o(.text.Short_Delays_Systik_us_ms))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Short_Delays_Systik_us_ms &rArr; SysTick_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssd1306_RESET
</UL>

<P><STRONG><a name="[6e]"></a>ShowFanisCooling</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, solder_station_stm32.o(.text.ShowFanisCooling))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = ShowFanisCooling &rArr; Draw_Fan_is_Cooling &rArr; Draw_FAN_is_Cooling_map &rArr; Adafruit_GFX_drawBitmap
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_Fan_is_Cooling
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Data_Averager_For_Solder
</UL>

<P><STRONG><a name="[a6]"></a>Show_SET_FAN_Bars_Data_to_Display</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, solder_station_stm32.o(.text.Show_SET_FAN_Bars_Data_to_Display))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Show_SET_FAN_Bars_Data_to_Display &rArr; Draw_Bars &rArr; Draw_FAN_Motor_Status_Bars &rArr; Adafruit_GFX_drawBitmap
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSD1306_Draw_Display
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSD1306_Clear_Display
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_FAN_Speed_Symbol
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_Bars
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_Buffer
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a7]"></a>Show_SET_FAN_Data_to_Display</STRONG> (Thumb, 128 bytes, Stack size 16 bytes, solder_station_stm32.o(.text.Show_SET_FAN_Data_to_Display))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = Show_SET_FAN_Data_to_Display &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssd1306_WriteString
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Cursor
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSD1306_Draw_Display
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSD1306_Clear_Display
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_FAN_Symbol
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_Buffer
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Adafruit_GFX_setFont
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Adafruit_GFX_drawCircle
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Adafruit_GFX_drawChar
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a8]"></a>Show_SET_Solder_Data_to_Display</STRONG> (Thumb, 128 bytes, Stack size 16 bytes, solder_station_stm32.o(.text.Show_SET_Solder_Data_to_Display))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = Show_SET_Solder_Data_to_Display &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssd1306_WriteString
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Cursor
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSD1306_Draw_Display
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSD1306_Clear_Display
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_SOLDER_Symbol
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_Buffer
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Adafruit_GFX_setFont
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Adafruit_GFX_drawCircle
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Adafruit_GFX_drawChar
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a9]"></a>Skip_Button_init</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, solder_station_stm32.o(.text.Skip_Button_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Skip_Button_init &rArr; GPIO_EN
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_EN
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[aa]"></a>Status_LED_init</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, main_solder_station_stm32.o(.text.Status_LED_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Status_LED_init &rArr; GPIO_EN
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_EN
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, short_delays_us_ms.o(.text.SysTick_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[a4]"></a>SystemCoreClockUpdate</STRONG> (Thumb, 110 bytes, Stack size 0 bytes, system_stm32f10x.o(.text.SystemCoreClockUpdate))
<BR><BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Short_Delays_Systik_us_ms
</UL>

<P><STRONG><a name="[35]"></a>SystemInit</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, system_stm32f10x.o(.text.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SystemInit &rArr; SetSysClock &rArr; SetSysClockTo72
</UL>
<BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(.text)
</UL>
<P><STRONG><a name="[25]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, interrupts.o(.text.TIM1_CC_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[86]"></a>TIM1_init_Capture_Compare</STRONG> (Thumb, 122 bytes, Stack size 8 bytes, solder_station_stm32.o(.text.TIM1_init_Capture_Compare))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TIM1_init_Capture_Compare &rArr; GPIO_EN
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_EN
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FAN_FSM
</UL>

<P><STRONG><a name="[26]"></a>TIM2_IRQHandler</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, interrupts.o(.text.TIM2_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[a0]"></a>TIM2_init_Capture_Compare</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, solder_station_stm32.o(.text.TIM2_init_Capture_Compare))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TIM2_init_Capture_Compare &rArr; GPIO_EN
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_EN
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STBY_Mode_FSM
</UL>

<P><STRONG><a name="[27]"></a>TIM3_IRQHandler</STRONG> (Thumb, 178 bytes, Stack size 16 bytes, interrupts.o(.text.TIM3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = TIM3_IRQHandler &rArr; Monitor_Skip_Button &rArr; SKIP_Button_Timer
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Monitor_Skip_Button
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSM
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>TIM4_IRQHandler</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, interrupts.o(.text.TIM4_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TIM4_IRQHandler &rArr; FSM
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSM
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[ac]"></a>Turn_OFF_FAN</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, solder_station_stm32.o(.text.Turn_OFF_FAN))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Turn_OFF_FAN &rArr; SPI1_Receive_Temperature &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_Receive_Temperature
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_EN_OFF_Motor_FAN
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_Disable_FAN_HEATER
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7a]"></a>USART_Cmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_usart.o(.text.USART_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Debug_UART_init
</UL>

<P><STRONG><a name="[79]"></a>USART_Init</STRONG> (Thumb, 178 bytes, Stack size 40 bytes, stm32f10x_usart.o(.text.USART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Debug_UART_init
</UL>

<P><STRONG><a name="[af]"></a>Update_PID_FAN</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, solder_station_stm32.o(.text.Update_PID_FAN))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Update_PID_FAN &rArr; PID_FAN &rArr; SPI1_Receive_Temperature &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_FAN
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b0]"></a>Update_PID_Solder</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, solder_station_stm32.o(.text.Update_PID_Solder))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Update_PID_Solder &rArr; PID_Solder &rArr; SPI1_Receive_Temperature &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_Solder
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4f]"></a>main</STRONG> (Thumb, 258 bytes, Stack size 0 bytes, main_solder_station_stm32.o(.text.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = main &rArr; Data_Averager_For_Solder &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssd1306_RESET
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Update_PID_Solder
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Update_PID_FAN
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Turn_OFF_FAN
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Status_LED_init
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Skip_Button_init
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_SET_Solder_Data_to_Display
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_SET_FAN_Data_to_Display
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_SET_FAN_Bars_Data_to_Display
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSD1306_Init
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2_init
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PB0_LED_main_STATUS
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Monitor_Skip_Button
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Make_Click_init
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Make_Click
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSM
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENCODER_init
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Debug_UART_init
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Data_Averager_From_FAN
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Data_Averager_For_Solder
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[62]"></a>pgm_read_bitmap_ptr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, sdd1306.o(.text.pgm_read_bitmap_ptr))
<BR><BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Adafruit_GFX_drawChar
</UL>

<P><STRONG><a name="[61]"></a>pgm_read_glyph_ptr</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sdd1306.o(.text.pgm_read_glyph_ptr))
<BR><BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Adafruit_GFX_drawChar
</UL>

<P><STRONG><a name="[b1]"></a>ssd1306_RESET</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, sdd1306.o(.text.ssd1306_RESET))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ssd1306_RESET &rArr; Short_Delays_Systik_us_ms &rArr; SysTick_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Short_Delays_Systik_us_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[71]"></a>ssd1306_WriteString</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, sdd1306.o(.text.ssd1306_WriteString))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = ssd1306_WriteString &rArr; Adafruit_GFX_drawChar
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Adafruit_GFX_drawChar
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_SET_Solder_Data_to_Display
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Show_SET_FAN_Data_to_Display
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Data_Averager_From_FAN
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Data_Averager_For_Solder
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_STBY_Symbol
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_SOLDER_Symbol
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_NO_Solder_detected
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_FAN_Symbol
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_FAN_Speed_Symbol
</UL>

<P><STRONG><a name="[6b]"></a>roundf</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, roundf.o(i.roundf))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = roundf &rArr; _frnd &rArr; __fpl_fnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_frnd
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Data_Averager_From_FAN
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Data_Averager_For_Solder
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_Solder
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_FAN
</UL>

<P><STRONG><a name="[6a]"></a>__aeabi_d2f</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, d2f.o(x$fpl$d2f))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Data_Averager_From_FAN
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Data_Averager_For_Solder
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_Solder
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_FAN
</UL>

<P><STRONG><a name="[b4]"></a>_d2f</STRONG> (Thumb, 98 bytes, Stack size 32 bytes, d2f.o(x$fpl$d2f), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fretinf
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[68]"></a>__aeabi_dadd</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, daddsub_clz.o(x$fpl$dadd))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Data_Averager_From_FAN
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Data_Averager_For_Solder
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_Solder
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_FAN
</UL>

<P><STRONG><a name="[b7]"></a>_dadd</STRONG> (Thumb, 332 bytes, Stack size 16 bytes, daddsub_clz.o(x$fpl$dadd), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub1
</UL>

<P><STRONG><a name="[69]"></a>__aeabi_ddiv</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, ddiv.o(x$fpl$ddiv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Data_Averager_From_FAN
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Data_Averager_For_Solder
</UL>

<P><STRONG><a name="[ba]"></a>_ddiv</STRONG> (Thumb, 552 bytes, Stack size 32 bytes, ddiv.o(x$fpl$ddiv), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[94]"></a>__aeabi_dmul</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, dmul.o(x$fpl$dmul))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_Solder
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_FAN
</UL>

<P><STRONG><a name="[bb]"></a>_dmul</STRONG> (Thumb, 332 bytes, Stack size 32 bytes, dmul.o(x$fpl$dmul), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[b6]"></a>__fpl_dnaninf</STRONG> (Thumb, 156 bytes, Stack size 16 bytes, dnaninf.o(x$fpl$dnaninf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dmul
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ddiv
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2f
</UL>

<P><STRONG><a name="[b9]"></a>__fpl_dretinf</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, dretinf.o(x$fpl$dretinf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_f2d
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dmul
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ddiv
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
</UL>

<P><STRONG><a name="[100]"></a>__aeabi_dsub</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, daddsub_clz.o(x$fpl$dsub), UNUSED)

<P><STRONG><a name="[bc]"></a>_dsub</STRONG> (Thumb, 464 bytes, Stack size 32 bytes, daddsub_clz.o(x$fpl$dsub), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd1
</UL>

<P><STRONG><a name="[67]"></a>__aeabi_f2d</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, f2d.o(x$fpl$f2d))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_f2d
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Data_Averager_From_FAN
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Data_Averager_For_Solder
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_Solder
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_FAN
</UL>

<P><STRONG><a name="[be]"></a>_f2d</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, f2d.o(x$fpl$f2d), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf
</UL>

<P><STRONG><a name="[95]"></a>__aeabi_fadd</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, faddsub_clz.o(x$fpl$fadd))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_Solder
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_FAN
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;roundf
</UL>

<P><STRONG><a name="[c0]"></a>_fadd</STRONG> (Thumb, 196 bytes, Stack size 16 bytes, faddsub_clz.o(x$fpl$fadd), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fretinf
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsub1
</UL>

<P><STRONG><a name="[101]"></a>__aeabi_fcmpeq</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, fcmp.o(x$fpl$fcmp), UNUSED)

<P><STRONG><a name="[c2]"></a>_feq</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, fcmp.o(x$fpl$fcmp), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fcmpeq
</UL>

<P><STRONG><a name="[c4]"></a>_fneq</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, fcmp.o(x$fpl$fcmp), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fcmpeq
</UL>

<P><STRONG><a name="[102]"></a>__aeabi_fcmpgt</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, fcmp.o(x$fpl$fcmp), UNUSED)

<P><STRONG><a name="[c5]"></a>_fgr</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, fcmp.o(x$fpl$fcmp), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fcmpge
</UL>

<P><STRONG><a name="[93]"></a>__aeabi_fcmpge</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, fcmp.o(x$fpl$fcmp))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_fcmpge
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_Solder
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_FAN
</UL>

<P><STRONG><a name="[c7]"></a>_fgeq</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, fcmp.o(x$fpl$fcmp), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fcmpge
</UL>

<P><STRONG><a name="[103]"></a>__aeabi_fcmple</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, fcmp.o(x$fpl$fcmp), UNUSED)

<P><STRONG><a name="[c8]"></a>_fleq</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, fcmp.o(x$fpl$fcmp), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fcmple
</UL>

<P><STRONG><a name="[104]"></a>__aeabi_fcmplt</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, fcmp.o(x$fpl$fcmp), UNUSED)

<P><STRONG><a name="[ca]"></a>_fls</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, fcmp.o(x$fpl$fcmp), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fcmple
</UL>

<P><STRONG><a name="[cb]"></a>__fpl_fcmp_Inf</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, fcmpi.o(x$fpl$fcmpinf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fcmple
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fcmpge
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fcmpeq
</UL>

<P><STRONG><a name="[105]"></a>__aeabi_cfcmpeq</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, feqf.o(x$fpl$feqf), UNUSED)

<P><STRONG><a name="[c3]"></a>_fcmpeq</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, feqf.o(x$fpl$feqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcmp_Inf
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
</UL>
<BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fneq
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_feq
</UL>

<P><STRONG><a name="[6c]"></a>__aeabi_f2iz</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, ffix.o(x$fpl$ffix))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_f2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Turn_OFF_FAN
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Data_Averager_From_FAN
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Data_Averager_For_Solder
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_Solder
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_FAN
</UL>

<P><STRONG><a name="[cc]"></a>_ffix</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, ffix.o(x$fpl$ffix), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
</UL>

<P><STRONG><a name="[8f]"></a>__aeabi_ui2f</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, fflt_clz.o(x$fpl$ffltu))
<BR><BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_Receive_Temperature
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_Solder
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_FAN
</UL>

<P><STRONG><a name="[106]"></a>_ffltu</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, fflt_clz.o(x$fpl$ffltu), UNUSED)

<P><STRONG><a name="[c6]"></a>_fcmpge</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, fgeqf.o(x$fpl$fgeqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcmp_Inf
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fgeq
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fgr
</UL>

<P><STRONG><a name="[107]"></a>__aeabi_cfcmple</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, fleqf.o(x$fpl$fleqf), UNUSED)

<P><STRONG><a name="[c9]"></a>_fcmple</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, fleqf.o(x$fpl$fleqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcmp_Inf
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
</UL>
<BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fls
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fleq
</UL>

<P><STRONG><a name="[108]"></a>__fpl_fcmple_InfNaN</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fleqf.o(x$fpl$fleqf), UNUSED)

<P><STRONG><a name="[92]"></a>__aeabi_fmul</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, fmul.o(x$fpl$fmul))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_Receive_Temperature
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_Solder
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_FAN
</UL>

<P><STRONG><a name="[cd]"></a>_fmul</STRONG> (Thumb, 258 bytes, Stack size 16 bytes, fmul.o(x$fpl$fmul), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fretinf
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
</UL>

<P><STRONG><a name="[bf]"></a>__fpl_fnaninf</STRONG> (Thumb, 140 bytes, Stack size 8 bytes, fnaninf.o(x$fpl$fnaninf))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __fpl_fnaninf
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_frnd
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fcmple
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fcmpge
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fcmpeq
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fmul
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ffix
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsub
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_f2d
</UL>

<P><STRONG><a name="[b5]"></a>__fpl_fretinf</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, fretinf.o(x$fpl$fretinf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fmul
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2f
</UL>

<P><STRONG><a name="[b3]"></a>_frnd</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, frnd.o(x$fpl$frnd))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _frnd &rArr; __fpl_fnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;roundf
</UL>

<P><STRONG><a name="[91]"></a>__aeabi_fsub</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, faddsub_clz.o(x$fpl$fsub))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fsub
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_Solder
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_FAN
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;roundf
</UL>

<P><STRONG><a name="[ce]"></a>_fsub</STRONG> (Thumb, 234 bytes, Stack size 16 bytes, faddsub_clz.o(x$fpl$fsub), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd1
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[a5]"></a>SysTick_Config</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, short_delays_us_ms.o(.text.SysTick_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SysTick_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Short_Delays_Systik_us_ms
</UL>

<P><STRONG><a name="[ab]"></a>__NVIC_SetPriority</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, short_delays_us_ms.o(.text.__NVIC_SetPriority))
<BR><BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Config
</UL>

<P><STRONG><a name="[97]"></a>__NVIC_DisableIRQ</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, solder_station_stm32.o(.text.__NVIC_DisableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_Disable_SOLDER
</UL>

<P><STRONG><a name="[65]"></a>__NVIC_EnableIRQ</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, solder_station_stm32.o(.text.__NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SKIP_Button_Timer
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_EN_SOLDER
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_EN_FAN_HEATER
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ext_interrupt_to_PINB6_PINB7_init
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DLY4_Delay_ms_INTERRUPT
</UL>

<P><STRONG><a name="[a1]"></a>SetSysClock</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, system_stm32f10x.o(.text.SetSysClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SetSysClock &rArr; SetSysClockTo72
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockTo72
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[a2]"></a>SetSysClockTo72</STRONG> (Thumb, 190 bytes, Stack size 8 bytes, system_stm32f10x.o(.text.SetSysClockTo72))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SetSysClockTo72
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>

<P><STRONG><a name="[bd]"></a>_dadd1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, daddsub_clz.o(x$fpl$dadd), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub
</UL>

<P><STRONG><a name="[b8]"></a>_dsub1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, daddsub_clz.o(x$fpl$dsub), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
</UL>

<P><STRONG><a name="[cf]"></a>_fadd1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, faddsub_clz.o(x$fpl$fadd), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsub
</UL>

<P><STRONG><a name="[c1]"></a>_fsub1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, faddsub_clz.o(x$fpl$fsub), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd
</UL>

<P><STRONG><a name="[38]"></a>_printf_input_char</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _printf_char_common.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> _printf_char_common.o(.text)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
